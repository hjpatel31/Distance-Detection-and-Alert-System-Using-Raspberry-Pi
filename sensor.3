#!/usr/bin/python3
# Group Members:Heli Jitendrakumar Patel
#              :Heta Nitinkumar Bhagat 
from signal import signal, SIGTERM, SIGHUP, pause
from gpiozero import LED, Button
from threading import Thread
from time import sleep
from random import randrange
from rpi_lcd import LCD

lcd = LCD()
leds = [LED(27), LED(22), LED(13), LED(19), LED(26), LED(21), LED(20), LED(12)]
button = Button(23)
is_running = True
delay = 0.1

patterns = [
                 [1, 0, 0, 0, 0, 0, 0, 0],
                 [1, 1, 0, 0, 0, 0, 0, 0],
                 [1, 1, 1, 0, 0, 0, 0, 0],
                 [1, 1, 1, 1, 0, 0, 0, 0],
                 [1, 1, 1, 1, 1, 0, 0, 0],
                 [1, 1, 1, 1, 1, 1, 0, 0],
                 [1, 1, 1, 1, 1, 1, 1, 0]
           ]
index = 1
led_in = 7
led_out = 0


def safe_exit(signum, frame):
    exit(1)


def show_pattern():
    while is_running:
        for id in range(8):
            leds[id].value = patterns[index-1][id]

        token = patterns[index-1].pop(led_out)
        patterns[index-1].insert(led_in, token)

        sleep(delay)


def change_direction():
    global led_in, led_out, index

    led_in, led_out = led_out, led_in

    while True:
        new_index = randrange(1, len(patterns)+1)

        direction_arrow = ">>" if new_index > index else "<<"

        show = f"Pattern: {new_index}/{len(patterns)+1} {direction_arrow}"

        print(show)
        lcd.text(show, 2)

        if new_index != index:
            index = new_index
            break


signal(SIGTERM, safe_exit)
signal(SIGHUP, safe_exit)

try:
    lcd.text("Hello,", 1)

    initial_show = f"Pattern: {index}/{len(patterns)+1} >>"
    print(initial_show)
    lcd.text(initial_show, 2)

    button.when_pressed = change_direction
    index = randrange(1, len(patterns)+1)

    worker = Thread(target=show_pattern, daemon=True)
    worker.start()

    pause()

except KeyboardInterrupt:
    pass

finally:
    is_running = False
    sleep(1.5*delay)
    lcd.clear()

    for id in range(8):
        leds[id].close()
